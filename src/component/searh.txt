function underlineBibleVerses(verseString) {
    // Regular expression to match book, chapter, and verse numbers
    const verseRegex = /(\w+)\s+(\d+):(\d+)(?:-(\d+))?/;

    // Match the verse string with the regular expression
    const match = verseString.match(verseRegex);

    if (!match) {
        // If the verse string doesn't match the expected format, return the original string
        return verseString;
    }

    const book = match[1];
    const chapter = parseInt(match[2], 10);
    const startVerse = parseInt(match[3], 10);
    const endVerse = match[4] ? parseInt(match[4], 10) : startVerse;

    // Logic to underline the verses in the specified format
    let result = '';
    for (let i = startVerse; i <= endVerse; i++) {
        if (i > startVerse) {
            result += ', ';
        }
        result += `<u>${book} ${chapter}:${i}</u>`;
    }

    return result;
}

// Example usage:
const formattedVerses = underlineBibleVerses('Col 3:1-3');
console.log(formattedVerses); // Output: "<u>Col 3:1</u>, <u>Col 3:2</u>, <u>Col 3:3</u>"


import { useState, useEffect } from 'react';
import bibleData from './path/to/bible.json';

function underlineBibleVerses(verseString, bibleData) {
    const verseRegex = /(\w+)\s+(\d+):(\d+)(?:-(\d+))?/;
    const match = verseString.match(verseRegex);

    if (!match) {
        return verseString;
    }

    const bookName = match[1];
    const chapterNumber = parseInt(match[2], 10);
    const startVerseNumber = parseInt(match[3], 10);
    const endVerseNumber = match[4] ? parseInt(match[4], 10) : startVerseNumber;

    const book = bibleData.verses.find(book => book.book === bookName);
    if (!book) {
        return verseString;
    }

    const chapter = book.chapters.find(chap => chap.chapter === chapterNumber);
    if (!chapter) {
        return verseString;
    }

    let result = '';
    for (let i = startVerseNumber; i <= endVerseNumber; i++) {
        const verse = chapter.verses.find(v => v.verse === i);
        if (verse) {
            if (i > startVerseNumber) {
                result += ', ';
            }
            result += `<u>${bookName} ${chapterNumber}:${i}</u>`;
        }
    }

    return result;
}

// Example usage:
function MyComponent() {
    const [formattedVerses, setFormattedVerses] = useState('');

    useEffect(() => {
        const verseString = 'Col 3:1-3';
        const formatted = underlineBibleVerses(verseString, bibleData);
        setFormattedVerses(formatted);
    }, []);

    return (
        <div dangerouslySetInnerHTML={{ __html: formattedVerses }} />
    );
}
